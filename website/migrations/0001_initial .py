# Generated by Django 3.2.12 on 2024-02-13 13:31

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import website.models.Booking


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amenity', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullName', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Enter a valid format phone number', regex='^(0|91)?[6-9][0-9]{8}')])),
                ('date', models.DateField(default=datetime.date(2024, 2, 13))),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField(max_length=255)),
                ('is_archived', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['fullName', 'email'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photo', models.URLField(verbose_name='photo')),
                ('fullName', models.CharField(max_length=255)),
                ('job', models.CharField(choices=[('Manager', 'Manager'), ('Receptionist', 'Receptionist'), ('Room Service', 'Room Service')], max_length=100)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('phone', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Enter a valid format phone number', regex='^(0|91)?[6-9][0-9]{8}')])),
                ('startDate', models.DateField(auto_now=True)),
                ('descriptionJob', models.TextField(max_length=255)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE', max_length=10)),
                ('password', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Enter a valid format password', regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!#%*?&]{8,20}')])),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('photos', models.JSONField()),
                ('roomType', models.CharField(choices=[('Single Bed', 'Single Bed'), ('Double Bed', 'Double Bed'), ('Double Superior', 'Double Superior'), ('Suite', 'Suite')], max_length=20)),
                ('roomNumber', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=255)),
                ('offer', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], max_length=3)),
                ('priceNight', models.IntegerField(validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(200)])),
                ('discount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('cancellation', models.TextField(max_length=255)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Booked', 'Booked')], max_length=20)),
                ('amenities', models.ManyToManyField(related_name='rooms', to='website.Amenity')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Food', 'Food'), ('Other', 'Other')], max_length=10)),
                ('description', models.TextField(max_length=255)),
                ('timestamps', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(code='invalid_registration', message='Enter a valid format phone number', regex='^(0|91)?[6-9][0-9]{8}')])),
                ('orderDate', models.DateField(auto_now_add=True)),
                ('check_in', models.DateField(validators=[website.models.Booking.checkInHigherOrderDate])),
                ('hour_in', models.TimeField()),
                ('check_out', models.DateField()),
                ('hour_out', models.TimeField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.room')),
                ('specialRequest', models.TextField(max_length=255, null=True)),
                ('status', models.CharField(choices=[('Check In', 'Check In'), ('Check Out', 'Check Out'), ('In Progress', 'In Progress')], default='Check In', max_length=50)),
            ],
            options={
                'ordering': ['room_id', 'specialRequest'],
            },
        ),
    ]
